matrix_divided module
======================

Use - matrix_divided is a function that divides a matrix of integers
-------------------
    1) Importing success
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

    2) Checking matrix of integers
    >>> print(matrix_divided([[1, 2, 3], [4, 5, 6]], 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    3) Checking if an error is passed:
    >>> print(matrix_divided([[1, 'hola', 3], [4, 5, 6]], 3))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    4) div parameter test
    >>> print(matrix_divided([[1, 2], [3, 4]], 'hello'))
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    5) zero division error
    >>> print(matrix_divided([[1, 2], [3, 4]], 0))
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

    6) Testing type of return
    >>> print(type(matrix_divided([[1, 2, 3], [4, 5, 6]], 3)))
    <class 'list'>

    7) testing size of rows error
    >>> print(matrix_divided([[1, 2, 3, 10], [4, 5, 6]], 3))
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

    8) Testing empty matrix
    >>> matrix_divided([], 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    9) ---> list of lists! ---> what if a empty list is passed?
